{"version":3,"file":"index.js","sources":["../../node_modules/.pnpm/@parisholley+road-runner@1.1.8/node_modules/@parisholley/road-runner/dist/node.js","../../node_modules/.pnpm/@parisholley+road-runner@1.1.8/node_modules/@parisholley/road-runner/dist/index.js","../../packages/utils/Logger/concollor.js","../../../packages/utils/Logger/stylize.ts","../../../packages/utils/Logger/tag.ts","../../../packages/utils/Logger/utils.ts","../../../packages/utils/Logger/index.ts","../../../packages/Response/statusCodes.ts","../../../packages/Routing/ErrorHandlers/NotImplementedHandler.ts","../../../packages/Routing/ErrorHandlers/ServerErrorHandler.ts","../../../packages/Routing/ErrorHandlers/MethodNotAllowedHandler.ts","../../../packages/Routing/ErrorHandlers/NotFoundHandler.ts","../../../packages/utils/helpers.ts","../../../packages/Routing/methods.ts","../../../packages/Routing/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Type;\n(function (Type) {\n    Type[Type[\"STATIC\"] = 0] = \"STATIC\";\n    Type[Type[\"PARAM\"] = 1] = \"PARAM\";\n})(Type || (Type = {}));\nconst PARAM = ':';\nconst SLASH = '/';\nconst SLASH_CODE = SLASH.charCodeAt(0);\nclass Node {\n    constructor(config = {}) {\n        this.indices = config.indices || '';\n        this.children = config.children || [];\n        this.childrenI = config.childrenI || {};\n        this.path = config.path || \"\";\n        this.handle = config.handle || null;\n        this.wildChild = config.wildChild || false;\n        this.type = config.type || Type.STATIC;\n        this.param = config.param || '';\n        this.pathLength = this.path.length;\n        this.childrenLength = this.children.length;\n    }\n    addRoute(fullPath, handle) {\n        const params = this.countParams(fullPath);\n        if (!this.isEmpty()) {\n            this.onChunk(this, fullPath, fullPath, handle, params);\n        }\n        else {\n            this.insertChild(fullPath, fullPath, handle, params);\n        }\n    }\n    search(searchPath) {\n        let n = this;\n        const params = {};\n        walk: while (true) {\n            // referring to length is technically a function call, cache it\n            const searchPathLength = searchPath.length;\n            if (searchPathLength > n.pathLength && searchPath.slice(0, n.pathLength) === n.path) {\n                searchPath = searchPath.slice(n.pathLength);\n                if (n.wildChild) {\n                    n = n.children[0];\n                    let end = 0;\n                    while (end < searchPathLength && searchPath.charCodeAt(end) !== SLASH_CODE) {\n                        end++;\n                    }\n                    const paramValue = searchPath.slice(0, end);\n                    if (!paramValue || !n.param) {\n                        return { value: null, params };\n                    }\n                    if (n.param !== '!') {\n                        params[n.param] = paramValue;\n                    }\n                    // We need to go deeper!\n                    if (end < searchPathLength) {\n                        if (n.childrenLength === 0) {\n                            return { value: null, params };\n                        }\n                        searchPath = searchPath.slice(end);\n                        n = n.children[0];\n                        continue walk;\n                    }\n                    return { value: n.handle, params };\n                }\n                // If n node does not have a wildcard child, look up the next child node and continue to walk down the tree\n                const c = searchPath.charCodeAt(0);\n                for (let i = 0; i < n.indices.length; i++) {\n                    if (c === n.indices.charCodeAt(i)) {\n                        n = n.children[i];\n                        continue walk;\n                    }\n                }\n            }\n            else if (searchPath === n.path) {\n                return { value: n.handle, params };\n            }\n            return { value: null, params };\n        }\n    }\n    hasChildren() {\n        return this.children.length > 0;\n    }\n    insertChild(fullPath, childPath, handle, numParams) {\n        let offset = 0; // Already handled chars of the path\n        let n = this;\n        // Find prefix until first wildcard\n        for (let i = 0, max = childPath.length; numParams > 0; i++) {\n            const c = childPath[i];\n            if (c !== PARAM) {\n                continue;\n            }\n            // Find wildcard end (either '/' or path end)\n            let end = i + 1;\n            while (end < max && childPath[end] !== \"/\") {\n                if (childPath[end] === PARAM) {\n                    throw new Error(\"only one wildcard per path segment is allowed, has: '\" +\n                        childPath.slice(i) +\n                        \"' in path '\" +\n                        fullPath +\n                        \"'\");\n                }\n                else {\n                    end++;\n                }\n            }\n            // Check if this Node existing children which would be unreachable\n            // if we insert the wildcard here\n            if (n.hasChildren()) {\n                throw new Error(\"wildcard route '\" +\n                    childPath.slice(i, end) +\n                    \"' conflicts with existing children in path '\" +\n                    fullPath +\n                    \"'\");\n            }\n            // check if the wildcard has a name\n            if (end - i < 2) {\n                throw new Error(\"wildcards must be named with a non-empty name in path '\" +\n                    fullPath +\n                    \"'\");\n            }\n            // Split path at the beginning of the wildcard\n            if (i > 0) {\n                n.replacePath(childPath.slice(offset, i));\n                offset = i;\n            }\n            n = n.replaceChildren({ type: Type.PARAM });\n            numParams--;\n            if (end < max) {\n                n.replacePath(childPath.slice(offset, end));\n                offset = end;\n                n = n.replaceChildren();\n            }\n        }\n        // insert remaining path part and handle to the leaf\n        n.replacePath(childPath.slice(offset));\n        n.setHandle(handle);\n    }\n    setHandle(newHandle) {\n        this.handle = newHandle;\n    }\n    replaceChildren(config = {}) {\n        const child = new Node(config);\n        if (config.type === Type.PARAM) {\n            this.wildChild = true;\n        }\n        this.children = [child];\n        this.childrenLength = 1;\n        return child;\n    }\n    replacePath(newPath) {\n        if (newPath[0] === PARAM) {\n            this.param = newPath.slice(1);\n        }\n        this.path = newPath;\n        this.pathLength = newPath.length;\n    }\n    isEmpty() {\n        return !(this.path.length > 0 || this.children.length > 0);\n    }\n    processCharacter(fullPath, childPath, handle, numParams) {\n        const c = childPath[0];\n        // Slash after param\n        if (this.type === Type.PARAM && c === \"/\" && this.children.length === 1) {\n            this.onChunk(this.children[0], fullPath, childPath, handle, numParams);\n            return;\n        }\n        // Check if a child with the next path char exists\n        const existing = this.childrenI[c.charCodeAt(0)];\n        if (existing) {\n            existing.onChunk(existing, fullPath, childPath, handle, numParams);\n            return;\n        }\n        // Otherwise insert it\n        if (c !== PARAM) {\n            const child = new Node({ type: Type.STATIC });\n            this.children.push(child);\n            this.indices += c;\n            this.childrenI[c.charCodeAt(0)] = child;\n            this.childrenLength = this.children.length;\n            child.insertChild(fullPath, childPath, handle, numParams);\n            return;\n        }\n        this.insertChild(fullPath, childPath, handle, numParams);\n    }\n    processWildcard(fullPath, childPath, handle, numParams) {\n        const isMatch = childPath.length >= this.path.length &&\n            this.path === childPath.slice(0, this.path.length) &&\n            (this.path.length >= childPath.length || childPath[this.path.length] === \"/\");\n        if (isMatch) {\n            this.onChunk(this, fullPath, childPath, handle, numParams);\n            return;\n        }\n        // Wildcard conflict\n        const pathSeg = childPath.split(\"/\")[0];\n        const prefix = fullPath.slice(0, fullPath.indexOf(pathSeg)) + this.path;\n        throw new Error(`'${pathSeg}' in new path '${fullPath}' conflicts with existing wildcard '${this.path}' in existing prefix '${prefix}'`);\n    }\n    createNode(i, fullPath, childPath, handle, numParams) {\n        const nextChildPath = childPath.slice(i);\n        if (this.wildChild) {\n            this.children[0].processWildcard(fullPath, nextChildPath, handle, numParams - 1);\n            return;\n        }\n        this.processCharacter(fullPath, nextChildPath, handle, numParams);\n    }\n    commonPrefixIndex(childPath) {\n        // Find the longest common prefix\n        // This also implies that the common prefix contains no PARAM\n        // since the existing key can't contain those chars.\n        let i = 0;\n        const max = Math.min(childPath.length, this.path.length);\n        while (i < max && this.path[i] === childPath[i]) {\n            i++;\n        }\n        return i;\n    }\n    split(i, childPath) {\n        if (i < this.path.length) {\n            const child = new Node({\n                path: this.path.slice(i),\n                wildChild: this.wildChild,\n                childrenI: this.childrenI,\n                children: this.children,\n                handle: this.handle,\n                indices: this.indices\n            });\n            this.children = [child];\n            this.indices = this.path[i];\n            this.childrenI = { [this.indices.charCodeAt(0)]: child };\n            this.childrenLength = 1;\n            this.wildChild = false;\n            this.path = childPath.slice(0, i);\n            this.pathLength = this.path.length;\n            this.handle = null;\n            return true;\n        }\n        return false;\n    }\n    onChunk(n, fullPath, childPath, fullPathHandle, numParams) {\n        const i = n.commonPrefixIndex(childPath);\n        const split = n.split(i, childPath);\n        // Make new node a child of this node\n        if (i < childPath.length) {\n            n.createNode(i, fullPath, childPath, fullPathHandle, numParams);\n        }\n        else if (i === childPath.length) {\n            // Make node a (in-path leaf)\n            if (!split) {\n                throw new Error('Route already defined.');\n            }\n            this.handle = fullPathHandle;\n        }\n    }\n    countParams(path) {\n        let n = 0;\n        for (let i = 0; i < path.length; i++) {\n            if (path[i] !== PARAM) {\n                continue;\n            }\n            n++;\n        }\n        return n;\n    }\n}\nexports.Node = Node;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst node_1 = require(\"./node\");\nfunction typeCheck(bucket, path) {\n    if (!path) {\n        throw new Error('Path is required.');\n    }\n    if (!bucket) {\n        throw new Error('Bucket is required.');\n    }\n    // when used outside of typescript, it is possible for user to pass in the wrong parameters\n    if (typeof bucket !== 'string') {\n        throw new Error('Bucket should be a string.');\n    }\n    if (typeof path !== 'string') {\n        throw new Error('Path should be a string.');\n    }\n}\nclass RoadRunner {\n    constructor() {\n        this.buckets = {};\n    }\n    addRoute(bucket, path, value) {\n        typeCheck(bucket, path);\n        // only check when building routes for performance, assume user will pass in correct values on lookup\n        if (path[0] !== '/' && path[0] !== '*') {\n            throw new Error('The first character of a path should be `/` or `*`.');\n        }\n        // convert wildcards into params (we suppress them from output later)\n        path = path.replace(/\\*([A-z0-9]+)?\\//g, ':!/').replace(/\\*$/g, ':!');\n        if (!this.buckets[bucket]) {\n            this.buckets[bucket] = new node_1.Node();\n        }\n        this.buckets[bucket].addRoute(path, value);\n    }\n    findRoute(bucket, path) {\n        typeCheck(bucket, path);\n        if (!this.buckets[bucket]) {\n            return null;\n        }\n        const dynamic = this.buckets[bucket].search(path);\n        if (dynamic.value === null) {\n            return null;\n        }\n        return {\n            value: dynamic.value,\n            params: dynamic.params\n        };\n    }\n}\nexports.RoadRunner = RoadRunner;\n","const stylize = require('./stylize');\n\nfunction Concollor(strings, ...values) {\n  const result = [strings[0]];\n\n  let i = 1;\n  for (const val of values) {\n    const str = strings[i++];\n\n    if (str.startsWith('(')) {\n      const pos = str.indexOf(')');\n      const styles = str.substring(1, pos);\n      const value = stylize(styles, val);\n      const rest = str.substring(pos + 1);\n\n      result.push(value, rest);\n    }\n  }\n\n  return result.join('');\n}\n\nexport default Concollor;\n",null,null,null,null,null,null,null,null,null,null,null,null],"names":["require$$0","stylize","Error","Logger","RoadRunner"],"mappings":"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"}